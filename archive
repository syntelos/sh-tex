#!/bin/bash
#
# Syntelos Archive
# Copyright (C) 2021, John Pritchard, @syntelos
# CC-BY-NC
# This work is licensed under the Creative Commons
# Attribution-NonCommercial 4.0 International License. To view a copy
# of this license, visit
# http://creativecommons.org/licenses/by-nc/4.0/ or send a letter to
# Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.
#
declare -g head=$(which head)
declare -g tail=$(which tail)
#
declare -g dir=~/Pictures
#
#
# <archive> (relative) [internal] <logical information>
#
declare -g root=$(basename $0)
declare -g camera=screenshot
declare -g yyyy=$(date +%Y)
declare -g yyyymmdd=$(date +%Y%m%d)
declare -g yyyy_mm_dd=$(date +%Y/%m/%d)
declare -g mmdd=$(date +%m%d)
#
declare -g circa=${root}/${yyyy}/${mmdd}
declare -g index=${circa}/index.txt
declare -g summation=${circa}/${root}-${yyyy}-${mmdd}
declare -g animation=${summation}.mp4
declare -g labels=${circa}/labels.txt
#
function usage {
    cat<<EOF>&2
Syntelos archive is a referential frame for the screenshot camera.

    ${root}                             Copy <camera> to <store>.

    ${root} copy                        Copy <store> list into today's archive <index>
                                        '${index}'.

    ${root} dist [fi|mv] <files>        Locate or distribute files into archive.

    ${root} echo <m>                    Append <m> to <labels>.

    ${root} home [head|tail|list]       Prefix output with absolute location.

    ${root} [tod|today|store]           Output today's archive <store>
                                        location '${circa}'.

    ${root} [lab|labels]                Output today's archive <labels> 
                                        location '${labels}'.

    ${root} [idx|index]                 Output today's archive <index>
                                        location '${index}'.

    ${root} count [cam|sto|lab|idx]     Size of <camera>, <store>, 
                                        <labels>, or <index>.

    ${root} head [cam|sto|lab|idx] <?>
    ${root} list [cam|sto|lab|idx]
    ${root} tail [cam|sto|lab|idx] <?>  List '${labels}'
                                        or '${index}'
                                        using <head|tail> arguments.

    ${root} edit [lab|idx]              Edit '${labels}'
                                        or '${index}'
                                        with the 'ed' line editor.

    ${root} [ani|anim|animation]        Output '${animation}'.

    ${root} [enc|encode]                Encode '${index}' 
                                        to '${animation}'.

    ${root} play                        Play '${animation}'.

EOF
    exit 1
}
#
function animation {

    echo ${animation}
}
#
function copy {

    if list store > ${index}
    then
        list idx

        return 0
    else
        return 1
    fi
}
#
function count {

    case "${1}" in
        cam|camera)
            shift

            2>/dev/null ls Screenshot* | sed 's/ /%/g' | wc -l | awk '{print $1}'
            ;;
        lab|labels)
            shift
            if [ -f ${labels} ]
            then

                if wc -l ${labels} | awk '{print $1}'
                then
                    return 0;
                fi
            else
                echo 0
            fi
        ;;
        idx|index)
            shift
            if [ -f ${index} ]
            then

                if wc -l ${index} | awk '{print $1}'
                then
                    return 0;
                fi
            else
                echo 0
            fi
        ;;
        tod|today|sto|store)
            shift
            if [ -d ${circa} ]
            then

                if 2>/dev/null ls ${circa}/${camera}-* | wc -l 
                then
                    return 0;
                fi
            else
                echo 0
            fi
        ;;
    esac
    return 1;
}
#
function copyto {

    case "${1}" in
        lab|labels)
            shift
            echo "${*}" >> ${labels}

        ;;
        idx|index)
            shift
            for src in $*
            do
                echo ${src} >> ${index}
            done
        ;;
    esac


}
#
function dist {

    case "${1}" in
        fi|fil|file|tgt|target)
            shift
            for src in $*
            do
                if [ -f ${src} ]
                then
                    tgt=archive/$(date -r ${src} '+%Y')/$(date -r ${src} '+%m%d')/$(basename ${src})
                    echo ${tgt}
                else
                    return 1
                fi
            done
            return 0
            ;;
        mv|move)
            shift
            for src in $*
            do
                if [ -f ${src} ]
                then
                    tgt=archive/$(date -r ${src} '+%Y')/$(date -r ${src} '+%m%d')/$(basename ${src})
                    if mv ${src} ${tgt}
                    then
                        continue
                    else
                        return 1
                    fi
                else
                    return 1
                fi
            done
            return 0
            ;;
        *)
            return 1
            ;;
    esac
}
#
function edit {

    case "${1}" in
        lab|labels)
            shift
            if [ -f ${labels} ]
            then

                if ed ${labels}
                then
                    return 0;
                fi
            fi
        ;;
        idx|index)
            shift
            if [ -f ${index} ]
            then
                
                if ed ${index}
                then
                    return 0;
                fi
            fi
            ;;
    esac
    return 1;
}
#
function encode {

    if [ -f ${index} ]
    then
        if [ -d /tmp/encode ]
        then
            rm -f /tmp/encode/* 
        else
            mkdir /tmp/encode
        fi

        if cd /tmp/encode && cp -p $(cat ${dir}/${index} | sed "s%^%${dir}/%") .
        then
            if ffmpeg -y -framerate 1 -pattern_type glob -i "${camera}-*.png" ${dir}/${animation}
            then
                return 0;
            else
                return 1
            fi
        fi
    fi
    return 1;
}
#
function head {

    case "${1}" in
        cam|camera)
            shift

            for fc in $(2>/dev/null ls Screenshot* | sed 's/ /%/g' | ${head} $* )
            do 
                echo ${fc}
            done
            ;;
        lab|labels)
            shift
            2>/dev/null cat ${labels} | ${head} $*

            ;;
        idx|index)
            shift
            2>/dev/null cat ${index} | ${head} $*

        ;;
        tod|today|sto|store)
            shift
            if [ -d ${circa} ]
            then

                for fc in $(2>/dev/null ls ${circa}/${camera}-* | ${head} $* )
                do
                    echo ${fc}
                done
            fi
        ;;
    esac
}
#
function home {

    case "${1}" in
        head)
            shift
            if head $* | sed "s%^%${dir}/%"
            then
                exit 0
            else
                exit 1
            fi
            ;;
        idx|index)
            shift
            if index $* | sed "s%^%${dir}/%"
            then
                exit 0
            else
                exit 1
            fi
            ;;
        lab|labels)
            shift
            if labels $* | sed "s%^%${dir}/%"
            then
                exit 0
            else
                exit 1
            fi
            ;;
        list)
            shift
            if list $* | sed "s%^%${dir}/%"
            then
                exit 0
            else
                exit 1
            fi
            ;;
        tod|today|sto|store)
            shift
            if today $* | sed "s%^%${dir}/%"
            then
                exit 0
            else
                exit 1
            fi
            ;;
        tail)
            shift
            if tail $* | sed "s%^%${dir}/%"
            then
                exit 0
            else
                exit 1
            fi
            ;;

    esac
}
#
function labels {

    echo ${labels}
}
#
#
function index {

    echo ${index}
}
#
function list {

    case "${1}" in
        cam|camera)
            shift

            for fc in $(2>/dev/null ls Screenshot* | sed 's/ /%/g')
            do 
                echo ${fc}
            done
        ;;
        lab|labels)
            shift
            for fc in $(2>/dev/null cat ${labels})
            do
                echo ${fc}
            done
        ;;
        idx|index)
            shift
            for fc in $(2>/dev/null cat ${index})
            do
                echo ${fc}
            done
        ;;
        tod|today|sto|store)
            shift
            if [ -d ${circa} ]
            then

                for fc in $(2>/dev/null ls ${circa}/${camera}-* )
                do
                    echo ${fc}
                done
            fi
        ;;
    esac

}
#
function play {

    if [ -f ${animation} ] && ffplay ${animation}
    then
        return 0
    else
        return 1
    fi
}
#
#
function store {
    declare many=0
    #
    # obscuring the source file name to conserve unit item integrity
    #
    for store_src in $(list camera)
    do
        if store_tgtf=$(echo ${store_src} | tr '[A-Z]' '[a-z]' | sed 's/%from%/%/; s/-//g; s/%/-/g;') &&[ -n "${store_tgtf}" ]
        then

            if store_src_yyyymmdd=$(echo ${store_tgtf} | sed "s/${camera}-//; s/-.*//") &&[ -n "${store_src_yyyymmdd}" ]
            then
                
                if store_src_dd=$(echo ${store_src_yyyymmdd} | sed 's/^[0-9][0-9][0-9][0-9][0-9][0-9]//') &&[ -n "${store_src_dd}" ]
                then
                    if store_src_mm=$(echo ${store_src_yyyymmdd} | sed 's/^[0-9][0-9][0-9][0-9]//; s/[0-9][0-9]$//') &&[ -n "${store_src_mm}" ]
                    then
                        if store_src_yyyy=$(echo ${store_src_yyyymmdd} | sed 's/[0-9][0-9][0-9][0-9]$//') &&[ -n "${store_src_yyyy}" ]
                        then

                            
                            store_tgtd=${root}/${store_src_yyyy}/${store_src_mm}${store_src_dd}
                            if [ ! -d ${store_tgtd} ]
                            then
                                mkdir -p ${store_tgtd}
                            fi

                            store_tgt=${store_tgtd}/${store_tgtf}
                            #
                            # obscuring the source file name to prevent shell space bugs
                            #
                            if mv "$(echo ${store_src} | sed 's/%/ /g')" "${store_tgt}"
                            then
                                many=$(( $many + 1 ))
                                echo ${store_tgt}
                            else
                                echo "error in mv '$(echo ${store_src} | sed 's/%/ /g')' '${store_tgt}'"
                                exit 1
                            fi
                        else
                            exit 1
                        fi
                    else
                        exit 1
                    fi
                else
                    exit 1
                fi
            else
                exit 1
            fi
        else
            exit 1
        fi
    done

    #
    if [ 0 -lt $many ]
    then
        exit 0
    else
        exit 1
    fi
}
#
function tail {

    case "${1}" in
        cam|camera)
            shift

            for fc in $(2>/dev/null ls Screenshot* | sed 's/ /%/g' | ${tail} $* )
            do 
                echo ${fc}
            done
            ;;
        lab|labels)
            shift
            2>/dev/null cat ${labels} | ${tail} $*

            ;;
        idx|index)
            shift
            2>/dev/null cat ${index} | ${tail} $*

        ;;
        tod|today|sto|store)
            shift
            if [ -d ${circa} ]
            then

                for fc in $(2>/dev/null ls ${circa}/${camera}-* | ${tail} $* )
                do
                    echo ${fc}
                done
            fi
        ;;
    esac

}
#
function today {

    echo ${circa}
}
#
if cd ${dir}
then

    if [ -n "${1}" ]
    then
        case "${1}" in
            ani|anim|animation)
                shift
                if animation $*
                then
                    exit 0
                else
                    exit 1
                fi
                ;;
            copy)
                shift
                if copy $*
                then
                    exit 0
                else
                    exit 1
                fi
                ;;
            count)
                shift
                if count $*
                then
                    exit 0
                else
                    exit 1
                fi
                ;;
            dist)
                shift
                if dist $*
                then
                    exit 0
                else
                    exit 1
                fi
                ;;
            echo)
                shift
                if copyto $*
                then
                    exit 0
                else
                    exit 1
                fi
                ;;
            edit)
                shift
                if edit $*
                then
                    exit 0
                else
                    exit 1
                fi
                ;;
            enc|encode)
                shift
                if encode $*
                then
                    exit 0
                else
                    exit 1
                fi
                ;;
            head)
                shift
                if head $*
                then
                    exit 0
                else
                    exit 1
                fi
                ;;
            home)
                shift
                if home $*
                then
                    exit 0
                else
                    exit 1
                fi
                ;;
            idx|index)
                shift
                if index $*
                then
                    exit 0
                else
                    exit 1
                fi
                ;;
            install)
                shift
                if [ ${0} -nt ~/bin/$(basename $0) ]&& cp -p $0 ~/bin
                then
                    exit 0
                else
                    exit 1
                fi
                ;;
            lab|labels)
                shift
                if labels $*
                then
                    exit 0
                else
                    exit 1
                fi
                ;;
            list)
                shift
                if list $*
                then
                    exit 0
                else
                    exit 1
                fi
                ;;
            play)
                shift
                if play $*
                then
                    exit 0
                else
                    exit 1
                fi
                ;;
            tod|today|sto|store)
                shift
                if today $*
                then
                    exit 0
                else
                    exit 1
                fi
                ;;
            tail)
                shift
                if tail $*
                then
                    exit 0
                else
                    exit 1
                fi
                ;;
            *)
                usage
                ;;
        esac
    else
        if store
        then
            exit 0
        else
            exit 1
        fi
    fi
else
    cat<<EOF>&2
$0 error in 'cd ${dir}'.
EOF
    exit 1
fi
