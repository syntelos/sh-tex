#!/bin/bash

declare -g title_prefix

function title_usage {

    cat<<EOF>&2

Synopsis

  title <prefix> today

Description

  Print title with a current working name.


Synopsis

  title <prefix> exist

Description

  Print title of an existing working name.


Synopsis

  title <prefix> next

Description

  Print title of sequential working name for today.


EOF
}

function title_yyyymmdd {

    if date '+%Y%m%d'
    then
        return 0
    else
        return 1
    fi
}

function title_today {

    if echo ${title_prefix}-$(title_yyyymmdd)
    then
        return 0
    else
        return 1
    fi
}

function title_exist {

    if exist=$(2>/dev/null ls -d ${title_prefix}-* | sort -V | tail -n 1) && [ -n "${exist}" ]
    then
        return 0
    else
        return 1
    fi
}

function title_next {

    if exist=$(2>/dev/null ls -d $(title_today)-* | sort -V | tail -n 1) && [ -n "${exist}" ]
    then
        if index=$(echo ${exist} | awk -F- '{print $3}') && [ -n "${index}" ]
        then
            echo "$(title_today)-$(( ${index} + 1 ))"
            return 0
        else
            return 1
        fi
    else
        echo "$(title_today)-0"
        return 0
    fi
}

title_prefix=$(echo "${1}" | sed 's%^-%%g; s%-$%%g;')
shift

case "${1}" in

    today)
        shift
        if title_today $*
        then
            exit 0
        else
            exit 1
        fi
        ;;

    exist)
        shift
        if title_exist $*
        then
            exit 0
        else
            exit 1
        fi
        ;;

    next)
        shift
        if title_next $*
        then
            exit 0
        else
            exit 1
        fi
        ;;

    *)
        title_usage
        ;;
esac
